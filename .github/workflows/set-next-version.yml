name: Set-Next-Version

on:
  workflow_run:
    workflows: ["Build Docker Images"]
  workflow_dispatch:

jobs:
  generate-new-version:
    runs-on: ubuntu-latest
    outputs: 
      version: ${{ steps.output-version.outputs.version }}

    steps:
      - uses: actions/checkout@v2

      - name: Get Version
        id: old
        run: OUT=$(head -n3 package.json | tail -n1 | cut -d '"' -f4) && echo ::set-output name=v::$OUT
        working-directory: ./quizz-master-frontend

      - name: Get First Version Prefix
        id: prefix-1
        run: OUT=$(echo ${{ steps.old.outputs.v }} | cut -d '.' -f1) && echo ::set-output name=v::$OUT

      - name: Get First Version Prefix
        id: prefix-2
        run: OUT=$(echo ${{ steps.old.outputs.v }} | cut -d '.' -f2) && echo ::set-output name=v::$OUT

      - name: Get Version Suffix
        id: suffix
        run: OUT=$(echo ${{ steps.old.outputs.v }} | cut -d '.' -f3) && echo ::set-output name=v::$OUT
        
      - name: Output old Version
        run: echo ${{ steps.old.outputs.v }}

      - name: Get incremented Version
        id: new-version
        run: OUT=${{ steps.prefix-1.outputs.v }}.${{ steps.prefix-2.outputs.v }}.$((${{ steps.suffix.outputs.v }}+1)) && echo ::set-output name=v::$OUT
        
      - name: Output New Version
        id: output-version
        run: echo ${{ steps.new-version.outputs.v }} && echo ::set-output name=version::${{ steps.new-version.outputs.v }}

  set-new-version:
    runs-on: ubuntu-latest
    needs: generate-new-version
    steps:
      - uses: actions/checkout@v2
      - name: Set Version in Frontend
        run: npm version ${{ needs.generate-new-version.outputs.version }}
        working-directory: ./quizz-master-frontend

      - name: Set Version in version.txt
        run: echo ${{ needs.generate-new-version.outputs.version }} > version.txt

      - name: Push changes to GitHub
        uses: github-actions-x/commit@v2.8
        with:
          # Github Token with commit access
          github-token: ${{ env.GITHUB_TOKEN }}
          # Override branch to push to
          push-branch: dev
          # Specify commit message
          commit-message: Incremented Version to ${{ needs.generate-new-version.outputs.version }}
