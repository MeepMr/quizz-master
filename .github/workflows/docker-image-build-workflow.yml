name: Build Docker Images

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  set-version:
      runs-on: ubuntu-latest

      outputs:
        version-number: ${{ steps.get-version-number.outputs.version }}
      steps:
        - uses: actions/checkout@v2

        - name: Read package version
          id: get-version-number
          run: PACKAGE_VERSION=$(head -n 1 version.txt) && echo $PACKAGE_VERSION && echo ::set-output name=version::$PACKAGE_VERSION
          env:
            ACTIONS_ALLOW_UNSECURE_COMMANDS: true

  build-frontend-container:
    needs: set-version
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: print version
      run: echo ${{ needs.set-version.outputs.version-number }}
    - name: Npm Setup
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - name: npm install
      run: npm install
      working-directory: ./quizz-master-frontend/
    - name: build frontend
      run: npm run build
      working-directory: ./quizz-master-frontend/
    - name: Set up QEMU
      uses: docker/setup-qemu-action@master
      with:
        platforms: all
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master
    - name: Authenticate To ghcr
      uses: docker/login-action@v1.10.0
      with:
        registry: ghcr.io
        username: meepmr
        password: ${{ secrets.GHCR_PAT }}
    - name: Build
      uses: docker/build-push-action@v2
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: ./quizz-master-frontend
        file: ./docker/qm-frontend/Dockerfile
        platforms: linux/amd64,linux/arm64,linux/arm
        push: true
        tags: |
          ghcr.io/meepmr/quizz-master-frontend:${{ needs.set-version.outputs.version-number }}
          ghcr.io/meepmr/quizz-master-frontend:latest
